/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

import dao.Mahasiswa;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.NoResultException;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.AbstractQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THINKPAD
 */
public class FormMahasiswa extends javax.swing.JPanel {

    /**
     * Creates new form FormPeminjaman
     */
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjectLimangatusPU");
    EntityManager em = emf.createEntityManager();

    public FormMahasiswa() {
        initComponents();
        setOpaque(false);
        setTableModel();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateTanggalBergabung = new model.DateChooser();
        dateTanggalKembali = new model.DateChooser();
        buttonGroupJenisKelamin = new javax.swing.ButtonGroup();
        panelMain = new com.raven.swing.RoundPanel();
        panelView = new com.raven.swing.RoundPanel();
        buttonTambahView = new model.Button();
        jLabelDataMahasiswaView = new javax.swing.JLabel();
        jScrollPaneDataMahasiswaView = new javax.swing.JScrollPane();
        jTableDataMahasiswaView = new javax.swing.JTable();
        buttonHapusView = new model.Button();
        buttonBatalView = new model.Button();
        textFieldCari = new javax.swing.JTextField();
        jComboBoxCari = new javax.swing.JComboBox<>();
        panelAdd = new com.raven.swing.RoundPanel();
        buttonSimpanAdd = new model.Button();
        buttonBatalAdd = new model.Button();
        jLabelNIM = new javax.swing.JLabel();
        textFieldNIM = new model.TextField();
        jLabelTambahDataPeminjamanBukuAdd = new javax.swing.JLabel();
        jLabelIdMahasiswa = new javax.swing.JLabel();
        jLabelNamaMahasiswa = new javax.swing.JLabel();
        textFieldNama = new model.TextField();
        textFieldEmail = new model.TextField();
        textFieldTelepon = new model.TextField();
        jLabelEmailMahasiswa = new javax.swing.JLabel();
        jLabelTeleponMahasiswa = new javax.swing.JLabel();
        jLabelTeleponMahasiswa1 = new javax.swing.JLabel();
        textFieldUsernameCred = new model.TextField();
        jLabelIdMahasiswa1 = new javax.swing.JLabel();
        textFieldTanggalBergabung = new model.TextField();
        jLabelTeleponMahasiswa2 = new javax.swing.JLabel();
        textFieldRolesCred = new model.TextField();
        jLabelIdMahasiswa2 = new javax.swing.JLabel();
        jRadioButtonL = new javax.swing.JRadioButton();
        jRadioButtonP = new javax.swing.JRadioButton();
        buttonDialogIdMahasiswa = new model.Button();
        textFieldIdCredentials = new model.TextField();

        dateTanggalBergabung.setTextRefernce(textFieldTanggalBergabung);

        setLayout(new java.awt.CardLayout());

        panelMain.setBackground(new java.awt.Color(55, 55, 55));
        panelMain.setLayout(new java.awt.CardLayout());

        panelView.setBackground(new java.awt.Color(55, 55, 55));

        buttonTambahView.setBackground(new java.awt.Color(31, 85, 20));
        buttonTambahView.setForeground(new java.awt.Color(228, 229, 241));
        buttonTambahView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/tambah20x20.png"))); // NOI18N
        buttonTambahView.setText("Tambah");
        buttonTambahView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahViewActionPerformed(evt);
            }
        });

        jLabelDataMahasiswaView.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        jLabelDataMahasiswaView.setForeground(new java.awt.Color(242, 242, 242));
        jLabelDataMahasiswaView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/mahasiswa20x20.png"))); // NOI18N
        jLabelDataMahasiswaView.setText("Data Mahasiswa");

        jTableDataMahasiswaView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDataMahasiswaView.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableDataMahasiswaView.getTableHeader().setReorderingAllowed(false);
        jTableDataMahasiswaView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableDataMahasiswaViewMousePressed(evt);
            }
        });
        jScrollPaneDataMahasiswaView.setViewportView(jTableDataMahasiswaView);

        buttonHapusView.setBackground(new java.awt.Color(31, 85, 20));
        buttonHapusView.setForeground(new java.awt.Color(228, 229, 241));
        buttonHapusView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/hapus20x20.png"))); // NOI18N
        buttonHapusView.setText("Hapus");
        buttonHapusView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusViewActionPerformed(evt);
            }
        });

        buttonBatalView.setBackground(new java.awt.Color(31, 85, 20));
        buttonBatalView.setForeground(new java.awt.Color(228, 229, 241));
        buttonBatalView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/batal20x20.png"))); // NOI18N
        buttonBatalView.setText("Batal");
        buttonBatalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBatalViewActionPerformed(evt);
            }
        });

        textFieldCari.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldCari.setToolTipText("");
        textFieldCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldCariKeyReleased(evt);
            }
        });

        jComboBoxCari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIM", "Nama Mahasiswa", "Jenis Kelamin", "Email", "No Telp", "Tanggal Bergabung" }));
        jComboBoxCari.setKeySelectionManager(null);
        jComboBoxCari.setName(""); // NOI18N

        javax.swing.GroupLayout panelViewLayout = new javax.swing.GroupLayout(panelView);
        panelView.setLayout(panelViewLayout);
        panelViewLayout.setHorizontalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneDataMahasiswaView, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE)
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addComponent(jLabelDataMahasiswaView)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addComponent(buttonTambahView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonHapusView, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBatalView, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textFieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCari, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelViewLayout.setVerticalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDataMahasiswaView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonTambahView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonHapusView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBatalView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneDataMahasiswaView, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelMain.add(panelView, "card2");

        panelAdd.setBackground(new java.awt.Color(55, 55, 55));

        buttonSimpanAdd.setBackground(new java.awt.Color(31, 85, 20));
        buttonSimpanAdd.setForeground(new java.awt.Color(228, 229, 241));
        buttonSimpanAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/simpan20x20.png"))); // NOI18N
        buttonSimpanAdd.setText("Simpan");
        buttonSimpanAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanAddActionPerformed(evt);
            }
        });

        buttonBatalAdd.setBackground(new java.awt.Color(31, 85, 20));
        buttonBatalAdd.setForeground(new java.awt.Color(228, 229, 241));
        buttonBatalAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/batal20x20.png"))); // NOI18N
        buttonBatalAdd.setText("Batal");
        buttonBatalAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBatalAddActionPerformed(evt);
            }
        });

        jLabelNIM.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelNIM.setForeground(new java.awt.Color(242, 242, 242));
        jLabelNIM.setText("NIM");

        textFieldNIM.setEditable(false);
        textFieldNIM.setToolTipText("");
        textFieldNIM.setRequestFocusEnabled(false);

        jLabelTambahDataPeminjamanBukuAdd.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        jLabelTambahDataPeminjamanBukuAdd.setForeground(new java.awt.Color(242, 242, 242));
        jLabelTambahDataPeminjamanBukuAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/mahasiswa20x20.png"))); // NOI18N
        jLabelTambahDataPeminjamanBukuAdd.setText("Tambah Data Mahasiswa");

        jLabelIdMahasiswa.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelIdMahasiswa.setForeground(new java.awt.Color(242, 242, 242));
        jLabelIdMahasiswa.setText("ID Credentials");

        jLabelNamaMahasiswa.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelNamaMahasiswa.setForeground(new java.awt.Color(242, 242, 242));
        jLabelNamaMahasiswa.setText("Nama");

        textFieldNama.setToolTipText("");

        textFieldEmail.setToolTipText("");

        textFieldTelepon.setToolTipText("");

        jLabelEmailMahasiswa.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelEmailMahasiswa.setForeground(new java.awt.Color(242, 242, 242));
        jLabelEmailMahasiswa.setText("Email");

        jLabelTeleponMahasiswa.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelTeleponMahasiswa.setForeground(new java.awt.Color(242, 242, 242));
        jLabelTeleponMahasiswa.setText("Telepon");

        jLabelTeleponMahasiswa1.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelTeleponMahasiswa1.setForeground(new java.awt.Color(242, 242, 242));
        jLabelTeleponMahasiswa1.setText("Jenis Kelamin");

        textFieldUsernameCred.setEditable(false);
        textFieldUsernameCred.setToolTipText("");
        textFieldUsernameCred.setRequestFocusEnabled(false);

        jLabelIdMahasiswa1.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelIdMahasiswa1.setForeground(new java.awt.Color(242, 242, 242));
        jLabelIdMahasiswa1.setText("Username");

        textFieldTanggalBergabung.setEditable(false);
        textFieldTanggalBergabung.setToolTipText("");
        textFieldTanggalBergabung.setRequestFocusEnabled(false);

        jLabelTeleponMahasiswa2.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelTeleponMahasiswa2.setForeground(new java.awt.Color(242, 242, 242));
        jLabelTeleponMahasiswa2.setText("Tanggal Bergabung");

        textFieldRolesCred.setEditable(false);
        textFieldRolesCred.setToolTipText("");
        textFieldRolesCred.setRequestFocusEnabled(false);

        jLabelIdMahasiswa2.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabelIdMahasiswa2.setForeground(new java.awt.Color(242, 242, 242));
        jLabelIdMahasiswa2.setText("Roles");

        buttonGroupJenisKelamin.add(jRadioButtonL);
        jRadioButtonL.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jRadioButtonL.setForeground(new java.awt.Color(242, 242, 242));
        jRadioButtonL.setText("Laki - laki");

        buttonGroupJenisKelamin.add(jRadioButtonP);
        jRadioButtonP.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jRadioButtonP.setForeground(new java.awt.Color(242, 242, 242));
        jRadioButtonP.setText("Perempuan");

        buttonDialogIdMahasiswa.setBackground(new java.awt.Color(31, 85, 20));
        buttonDialogIdMahasiswa.setForeground(new java.awt.Color(228, 229, 241));
        buttonDialogIdMahasiswa.setText("...");
        buttonDialogIdMahasiswa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDialogIdMahasiswaActionPerformed(evt);
            }
        });

        textFieldIdCredentials.setEditable(false);
        textFieldIdCredentials.setToolTipText("");
        textFieldIdCredentials.setRequestFocusEnabled(false);

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTambahDataPeminjamanBukuAdd)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(buttonSimpanAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBatalAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelIdMahasiswa2)
                                    .addComponent(jLabelIdMahasiswa1)
                                    .addComponent(jLabelIdMahasiswa))
                                .addGap(180, 180, 180))
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textFieldRolesCred, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textFieldUsernameCred, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAddLayout.createSequentialGroup()
                                        .addComponent(textFieldIdCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buttonDialogIdMahasiswa, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(59, 59, 59)))
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldNIM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNIM)
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jRadioButtonL)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButtonP))
                                    .addComponent(jLabelTeleponMahasiswa)
                                    .addComponent(jLabelTeleponMahasiswa2)
                                    .addComponent(jLabelNamaMahasiswa)
                                    .addComponent(jLabelEmailMahasiswa)
                                    .addComponent(jLabelTeleponMahasiswa1))
                                .addGap(0, 402, Short.MAX_VALUE))
                            .addComponent(textFieldNama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldTelepon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldTanggalBergabung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTambahDataPeminjamanBukuAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSimpanAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBatalAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNIM)
                    .addComponent(jLabelIdMahasiswa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldIdCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDialogIdMahasiswa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNamaMahasiswa)
                    .addComponent(jLabelIdMahasiswa1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldUsernameCred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(jLabelEmailMahasiswa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(jLabelIdMahasiswa2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldRolesCred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTeleponMahasiswa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTeleponMahasiswa1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonL)
                    .addComponent(jRadioButtonP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTeleponMahasiswa2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldTanggalBergabung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelMain.add(panelAdd, "card2");

        add(panelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTambahViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahViewActionPerformed
        // TODO add your handling code here:
        panelMain.removeAll();
        panelMain.repaint();
        panelMain.revalidate();

        panelMain.add(panelAdd);
        panelMain.repaint();
        panelMain.revalidate();

        textFieldNIM.setText(setNIM());
        textFieldNama.grabFocus();
        if (buttonTambahView.getText().equals("Ubah")) {
            dataTabel();
            buttonSimpanAdd.setText("Perbarui");
        }
    }//GEN-LAST:event_buttonTambahViewActionPerformed

    private void buttonBatalAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBatalAddActionPerformed
        // TODO add your handling code here:
        showPanel();
        loadData();
    }//GEN-LAST:event_buttonBatalAddActionPerformed

    private void buttonSimpanAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanAddActionPerformed
        // TODO add your handling code here:
        if (buttonSimpanAdd.getText().equals("Tambah")) {
            buttonSimpanAdd.setText("Simpan");
        } else if (buttonSimpanAdd.getText().equals("Simpan")) {
            insertData();
        } else if (buttonSimpanAdd.getText().equals("Perbarui")) {
            updateData();
        }

    }//GEN-LAST:event_buttonSimpanAddActionPerformed

    private void jTableDataMahasiswaViewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDataMahasiswaViewMousePressed
        // TODO add your handling code here:
        if (buttonTambahView.getText().equals("Tambah")) {
            buttonTambahView.setText("Ubah");
            buttonTambahView.setIcon(new ImageIcon(getClass().getResource("/assets/update20x20.png")));
            buttonHapusView.setVisible(true);
            buttonBatalView.setVisible(true);
        }
    }//GEN-LAST:event_jTableDataMahasiswaViewMousePressed

    private void buttonBatalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBatalViewActionPerformed
        // TODO add your handling code here:
        showPanel();
        loadData();
    }//GEN-LAST:event_buttonBatalViewActionPerformed

    private void buttonHapusViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusViewActionPerformed
        // TODO add your handling code here:
        hapusData();
    }//GEN-LAST:event_buttonHapusViewActionPerformed

    private void textFieldCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldCariKeyReleased
        // TODO add your handling code here:
        cariData();
    }//GEN-LAST:event_textFieldCariKeyReleased

    private void buttonDialogIdMahasiswaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDialogIdMahasiswaActionPerformed
        // TODO add your handling code here:
        boolean closable = true;
        DataCredentials dataCredentials = new DataCredentials(null, closable);
        dataCredentials.setVisible(true);
        
        textFieldIdCredentials.setText(dataCredentials.idCred);
        textFieldUsernameCred.setText(dataCredentials.username);
        textFieldRolesCred.setText(dataCredentials.roles);
        
    }//GEN-LAST:event_buttonDialogIdMahasiswaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private model.Button buttonBatalAdd;
    private model.Button buttonBatalView;
    private model.Button buttonDialogIdMahasiswa;
    private javax.swing.ButtonGroup buttonGroupJenisKelamin;
    private model.Button buttonHapusView;
    private model.Button buttonSimpanAdd;
    private model.Button buttonTambahView;
    private model.DateChooser dateTanggalBergabung;
    private model.DateChooser dateTanggalKembali;
    private javax.swing.JComboBox<String> jComboBoxCari;
    private javax.swing.JLabel jLabelDataMahasiswaView;
    private javax.swing.JLabel jLabelEmailMahasiswa;
    private javax.swing.JLabel jLabelIdMahasiswa;
    private javax.swing.JLabel jLabelIdMahasiswa1;
    private javax.swing.JLabel jLabelIdMahasiswa2;
    private javax.swing.JLabel jLabelNIM;
    private javax.swing.JLabel jLabelNamaMahasiswa;
    private javax.swing.JLabel jLabelTambahDataPeminjamanBukuAdd;
    private javax.swing.JLabel jLabelTeleponMahasiswa;
    private javax.swing.JLabel jLabelTeleponMahasiswa1;
    private javax.swing.JLabel jLabelTeleponMahasiswa2;
    private javax.swing.JRadioButton jRadioButtonL;
    private javax.swing.JRadioButton jRadioButtonP;
    private javax.swing.JScrollPane jScrollPaneDataMahasiswaView;
    private javax.swing.JTable jTableDataMahasiswaView;
    private com.raven.swing.RoundPanel panelAdd;
    private com.raven.swing.RoundPanel panelMain;
    private com.raven.swing.RoundPanel panelView;
    private javax.swing.JTextField textFieldCari;
    private model.TextField textFieldEmail;
    private model.TextField textFieldIdCredentials;
    private model.TextField textFieldNIM;
    private model.TextField textFieldNama;
    private model.TextField textFieldRolesCred;
    private model.TextField textFieldTanggalBergabung;
    private model.TextField textFieldTelepon;
    private model.TextField textFieldUsernameCred;
    // End of variables declaration//GEN-END:variables

    private void getData(DefaultTableModel model) {
        model.setRowCount(0);
        em.getTransaction().begin();
        CriteriaBuilder cb = em.getCriteriaBuilder();
        CriteriaQuery<Mahasiswa> cq = cb.createQuery(Mahasiswa.class);

        Root<Mahasiswa> mhs = cq.from(Mahasiswa.class);

        cq.multiselect(mhs.get("nim"), mhs.get("namaMahasiswa"), mhs.get("email"), mhs.get("noTelp"), mhs.get("tanggalBergabung"), mhs.get("jenisKelamin"));
        CriteriaQuery<Mahasiswa> select = cq.select(mhs);
        TypedQuery<Mahasiswa> q = em.createQuery(select);
        List<Mahasiswa> list = q.getResultList();

        for (Mahasiswa m : list) {
            model.addRow(new Object[]{
                m.getNim(),
                m.getNamaMahasiswa(),
                m.getJenisKelamin(),
                m.getEmail(),
                m.getNoTelp(),
                m.getTanggalBergabung()
            });
        }
        em.getTransaction().commit();
    }

    private void insertData() {
        String nim = textFieldNIM.getText();
        String namaMahasiswa = textFieldNama.getText();
        String jenisKelamin;
        if (jRadioButtonL.isSelected()) {
            jenisKelamin = "L";
        } else if (jRadioButtonP.isSelected()) {
            jenisKelamin = "P";
        } else {
            jenisKelamin = "";
        }
        String emailMahasiswa = textFieldEmail.getText();
        String teleponMahasiswa = textFieldTelepon.getText();
        String tanggalBergabung = textFieldTanggalBergabung.getText();

        if (nim.isEmpty() || namaMahasiswa.isEmpty() || jenisKelamin.isEmpty() || emailMahasiswa.isEmpty() || teleponMahasiswa.isEmpty() || tanggalBergabung.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        em.getTransaction().begin();
        Mahasiswa simpanMahasiswa = new Mahasiswa();
        simpanMahasiswa.setNim(nim);
        simpanMahasiswa.setNamaMahasiswa(namaMahasiswa);
        simpanMahasiswa.setJenisKelamin(jenisKelamin);
        simpanMahasiswa.setEmail(emailMahasiswa);
        simpanMahasiswa.setNoTelp(teleponMahasiswa);
        simpanMahasiswa.setTanggalBergabung(tanggalBergabung);
        em.persist(simpanMahasiswa);
        em.getTransaction().commit();
        JOptionPane.showMessageDialog(this, "Penyimpanan Data Berhasil");
        resetForm();
        loadData();
        showPanel();
    }

    private void updateData() {
        String nim = textFieldNIM.getText();
        String namaMahasiswa = textFieldNama.getText();
        String jenisKelamin;
        if (jRadioButtonL.isSelected()) {
            jenisKelamin = "L";
        } else if (jRadioButtonP.isSelected()) {
            jenisKelamin = "P";
        } else {
            jenisKelamin = "";
        }
        String emailMahasiswa = textFieldEmail.getText();
        String teleponMahasiswa = textFieldTelepon.getText();
        String tanggalBergabung = textFieldTanggalBergabung.getText();

        if (nim.isEmpty() || namaMahasiswa.isEmpty() || jenisKelamin.isEmpty() || emailMahasiswa.isEmpty() || teleponMahasiswa.isEmpty() || tanggalBergabung.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        em.getTransaction().begin();
        Mahasiswa updateMahasiswa = em.find(Mahasiswa.class, nim);
        updateMahasiswa.setNim(nim);
        updateMahasiswa.setNamaMahasiswa(namaMahasiswa);
        updateMahasiswa.setJenisKelamin(jenisKelamin);
        updateMahasiswa.setEmail(emailMahasiswa);
        updateMahasiswa.setNoTelp(teleponMahasiswa);
        updateMahasiswa.setTanggalBergabung(tanggalBergabung);
        em.getTransaction().commit();
        JOptionPane.showMessageDialog(this, "Pembaruan Data Berhasil");
        resetForm();
        loadData();
        showPanel();
    }

    private void hapusData() {
        int confirm = JOptionPane.showConfirmDialog(this,
                "Apakah yakin ingin menghapus data ini?",
                "Konfirmasi Hapus Data",
                JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            em.getTransaction().begin();
            for (int i = 0; i < jTableDataMahasiswaView.getSelectedRowCount(); i++) {
                String selectedRows = jTableDataMahasiswaView.getModel().getValueAt(i, 0).toString();
                Mahasiswa hapusMahasiswa = em.find(Mahasiswa.class, selectedRows);
                em.remove(hapusMahasiswa);
            }
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(this, "Penghapusan Data Berhasil", "", JOptionPane.INFORMATION_MESSAGE);
            resetForm();
            loadData();
            showPanel();
        } else {
            JOptionPane.showMessageDialog(this, "Penghapusan Data Gagal", "", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void cariData() {
        String[] valueModel = {"nim", "namaMahasiswa", "jenisKelamin", "email", "noTelp", "tanggalBergabung"};

        DefaultTableModel model = (DefaultTableModel) jTableDataMahasiswaView.getModel();
        model.setRowCount(0);

        em.getTransaction().begin();
        CriteriaBuilder cb = em.getCriteriaBuilder();
        AbstractQuery<Mahasiswa> cq = cb.createQuery(Mahasiswa.class);

        Root<Mahasiswa> Mahasiswa = cq.from(Mahasiswa.class);
        cq.where(cb.like(cb.upper(Mahasiswa.get(valueModel[jComboBoxCari.getSelectedIndex()])), "%" + textFieldCari.getText().toUpperCase() + "%"));
//        cq.where(cb.equal(Mahasiswa.get(valueModel[jComboBoxCari.getSelectedIndex()]), jTextFieldCari.getText()));
        CriteriaQuery<Mahasiswa> select = ((CriteriaQuery<Mahasiswa>) cq).select(Mahasiswa);
        TypedQuery<Mahasiswa> q = em.createQuery(select);
        List<Mahasiswa> list = q.getResultList();

        for (Mahasiswa m : list) {
            model.addRow(new Object[]{
                m.getNim(),
                m.getNamaMahasiswa(),
                m.getJenisKelamin(),
                m.getEmail(),
                m.getNoTelp(),
                m.getTanggalBergabung()
            });
        }

        em.getTransaction().commit();
    }

    private String setNIM() {
        String urutan = null;
        Date now = new Date();
        SimpleDateFormat noFormat = new SimpleDateFormat("yyMM"); // MHSW2312001
        String no = noFormat.format(now);

        em.getTransaction().begin();
        CriteriaBuilder cb = em.getCriteriaBuilder();
        CriteriaQuery<String> cq = cb.createQuery(String.class);
        Root<Mahasiswa> mhsRoot = cq.from(Mahasiswa.class);

        cq.select(mhsRoot.get("nim"));
        cq.where(cb.like(mhsRoot.get("nim"), "MHSW" + no + "%"));
        cq.orderBy(cb.desc(mhsRoot.get("nim")));

        TypedQuery<String> query = em.createQuery(cq);
        query.setMaxResults(1);

        try {
            String lastNim = query.getSingleResult();
            int nomor = Integer.parseInt(lastNim.substring(lastNim.length() - 3)) + 1; // MHSW2312002
            urutan = "MHSW" + no + String.format("%03d", nomor);
        } catch (NoResultException e) {
            urutan = "MHSW" + no + "001";
        }

        em.getTransaction().commit();
        return urutan;
    }

    private void loadData() {
        getData((DefaultTableModel) jTableDataMahasiswaView.getModel());
        buttonHapusView.setVisible(false);
        buttonBatalView.setVisible(false);

    }

    private void setTableModel() {
        DefaultTableModel model = (DefaultTableModel) jTableDataMahasiswaView.getModel();
        model.setColumnCount(0);
        model.addColumn("NIM");
        model.addColumn("Nama Mahasiswa");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Email");
        model.addColumn("No. Telepon");
        model.addColumn("Tanggal Bergabung");
//        model.isCellEditable(ERROR, WIDTH);
    }

    private void showPanel() {
        panelMain.removeAll();
        panelMain.add(new FormMahasiswa());
        panelMain.repaint();
        panelMain.revalidate();
    }

    private void resetForm() {
        textFieldNIM.setText("");
        textFieldNama.setText("");
        buttonGroupJenisKelamin.clearSelection();
        textFieldEmail.setText("");
        textFieldTelepon.setText("");
        textFieldTanggalBergabung.setText("");
    }

    private void dataTabel() {
        panelView.setVisible(false);
        panelAdd.setVisible(true);

        int row = jTableDataMahasiswaView.getSelectedRow();
        jLabelTambahDataPeminjamanBukuAdd.setText("Perbarui Data Mahasiswa");

        textFieldNIM.setEnabled(false);
        textFieldTanggalBergabung.setEnabled(false);

        textFieldNIM.setText(jTableDataMahasiswaView.getValueAt(row, 0).toString());
        textFieldNama.setText(jTableDataMahasiswaView.getValueAt(row, 1).toString());
        String jenisKelamin = jTableDataMahasiswaView.getValueAt(row, 2).toString();
        if (jenisKelamin.equals("L")) {
            jRadioButtonL.setSelected(true);
        } else if (jenisKelamin.equals("P")) {
            jRadioButtonP.setSelected(true);
        }
        textFieldEmail.setText(jTableDataMahasiswaView.getValueAt(row, 3).toString());
        textFieldTelepon.setText(jTableDataMahasiswaView.getValueAt(row, 4).toString());
        textFieldTanggalBergabung.setText(jTableDataMahasiswaView.getValueAt(row, 5).toString());
    }

}
